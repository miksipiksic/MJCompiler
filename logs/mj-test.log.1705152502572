INFO  14:28:05,546 - Compiling source file: C:\Users\vm200325d\pp1_projekat\workspace\MJCompiler\test\program.mj
INFO  14:28:05,617 - #2 program
INFO  14:28:05,618 - #48 MJProgram
INFO  14:28:05,618 - #5 namespace
INFO  14:28:05,618 - #48 x
INFO  14:28:05,618 - #3 {
INFO  14:28:05,618 - #7 const
INFO  14:28:05,619 - #48 int
INFO  14:28:05,619 - #48 a
INFO  14:28:05,621 - #8 =
INFO  14:28:05,621 - #47 5
INFO  14:28:05,621 - #6 ,
INFO  14:28:05,622 - #48 b
INFO  14:28:05,622 - #8 =
INFO  14:28:05,622 - #47 7
INFO  14:28:05,622 - #11 ;
INFO  14:28:05,623 - #48 int
INFO  14:28:05,625 - #48 x
INFO  14:28:05,625 - #13 [
INFO  14:28:05,625 - #14 ]
INFO  14:28:05,625 - #6 ,
INFO  14:28:05,629 - #48 y
INFO  14:28:05,629 - #13 [
INFO  14:28:05,631 - #14 ]
INFO  14:28:05,631 - #11 ;
INFO  14:28:05,633 - #48 int
INFO  14:28:05,635 - #48 z
INFO  14:28:05,635 - #6 ,
INFO  14:28:05,636 - #48 o
INFO  14:28:05,636 - #11 ;
INFO  14:28:05,636 - #3 {
INFO  14:28:05,637 - #48 int
INFO  14:28:05,637 - #48 methd
INFO  14:28:05,638 - #15 (
INFO  14:28:05,638 - #48 integer
INFO  14:28:05,638 - #12 :
INFO  14:28:05,638 - #12 :
INFO  14:28:05,638 - #48 int
INFO  14:28:05,638 - #48 x
INFO  14:28:05,639 - #6 ,
INFO  14:28:05,640 - #48 double
INFO  14:28:05,641 - #48 y
INFO  14:28:05,641 - #13 [
INFO  14:28:05,641 - #14 ]
INFO  14:28:05,642 - #16 )
INFO  14:28:05,643 - #3 {
INFO  14:28:05,644 - #18 break
INFO  14:28:05,644 - #11 ;
INFO  14:28:05,644 - #19 continue
INFO  14:28:05,645 - #11 ;
INFO  14:28:05,645 - #20 return
INFO  14:28:05,646 - #11 ;
INFO  14:28:05,647 - #20 return
INFO  14:28:05,647 - #47 5
INFO  14:28:05,649 - #11 ;
INFO  14:28:05,652 - #20 return
INFO  14:28:05,652 - #48 x
INFO  14:28:05,652 - #11 ;
INFO  14:28:05,654 - #20 return
INFO  14:28:05,654 - #48 true
INFO  14:28:05,654 - #11 ;
INFO  14:28:05,654 - #20 return
INFO  14:28:05,655 - #15 (
INFO  14:28:05,655 - #48 x
INFO  14:28:05,655 - #16 )
INFO  14:28:05,655 - #11 ;
INFO  14:28:05,655 - #20 return
INFO  14:28:05,656 - #36 new
INFO  14:28:05,656 - #48 int
INFO  14:28:05,656 - #13 [
INFO  14:28:05,656 - #48 x
INFO  14:28:05,659 - #14 ]
INFO  14:28:05,659 - #11 ;
INFO  14:28:05,660 - #20 return
INFO  14:28:05,660 - #36 new
INFO  14:28:05,660 - #48 int
INFO  14:28:05,660 - #15 (
INFO  14:28:05,660 - #47 5
INFO  14:28:05,660 - #16 )
INFO  14:28:05,662 - #11 ;
INFO  14:28:05,662 - #20 return
INFO  14:28:05,662 - #36 new
INFO  14:28:05,662 - #48 int
INFO  14:28:05,663 - #15 (
INFO  14:28:05,663 - #16 )
INFO  14:28:05,664 - #11 ;
INFO  14:28:05,664 - #20 return
INFO  14:28:05,664 - #48 klasa
INFO  14:28:05,664 - #12 :
INFO  14:28:05,664 - #12 :
INFO  14:28:05,665 - #48 klasa
INFO  14:28:05,665 - #15 (
INFO  14:28:05,665 - #48 false
INFO  14:28:05,665 - #16 )
INFO  14:28:05,666 - #11 ;
INFO  14:28:05,666 - #21 print
INFO  14:28:05,666 - #15 (
INFO  14:28:05,666 - #48 x
INFO  14:28:05,667 - #16 )
INFO  14:28:05,667 - #11 ;
INFO  14:28:05,669 - #21 print
INFO  14:28:05,669 - #15 (
INFO  14:28:05,669 - #48 x
INFO  14:28:05,670 - #6 ,
INFO  14:28:05,670 - #47 5
INFO  14:28:05,670 - #16 )
INFO  14:28:05,670 - #11 ;
INFO  14:28:05,670 - #22 read
INFO  14:28:05,671 - #15 (
INFO  14:28:05,671 - #48 klasa
INFO  14:28:05,671 - #12 :
INFO  14:28:05,671 - #12 :
INFO  14:28:05,671 - #48 k
INFO  14:28:05,672 - #16 )
INFO  14:28:05,672 - #11 ;
INFO  14:28:05,672 - #23 if
INFO  14:28:05,672 - #15 (
INFO  14:28:05,672 - #48 x
INFO  14:28:05,673 - #31 >
INFO  14:28:05,673 - #47 5
INFO  14:28:05,675 - #16 )
INFO  14:28:05,676 - #3 {
ERROR 14:28:05,676 - 
Sintaksna greska na liniji 28
ERROR 14:28:05,676 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 28
